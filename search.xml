<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>element后台</title>
    <url>/2020/05/24/element%E5%90%8E%E5%8F%B0/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vue-element-admin</span><br></pre></td></tr></table></figure>
<p>element写好的后台</p>
]]></content>
      <categories>
        <category>element</category>
      </categories>
      <tags>
        <tag>element</tag>
      </tags>
  </entry>
  <entry>
    <title>element安装</title>
    <url>/2020/05/24/element%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>安装element</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vue add element  &#x2F;&#x2F;cli3</span><br></pre></td></tr></table></figure>
<p>之后选择<br>  y/n/1<br>或</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i element-ui -S  &#x2F;&#x2F;cli2</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>element</category>
      </categories>
      <tags>
        <tag>element</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>git全局配置</title>
    <url>/2020/05/25/git%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="git全局配置"><a href="#git全局配置" class="headerlink" title="git全局配置"></a>git全局配置</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config -l  &#x2F;&#x2F;查看配置信息  ！是L小写</span><br><span class="line">$ git config --globla -l  &#x2F;&#x2F;查看全局配置信息</span><br></pre></td></tr></table></figure>

<p>如果没有用户名和邮箱<br><img src="/images/pasted-1.png" alt="upload successful"></p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>express允许跨域</title>
    <url>/2020/05/24/express%E5%85%81%E8%AE%B8%E8%B7%A8%E5%9F%9F/</url>
    <content><![CDATA[<p>app.js里</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">router.all(<span class="string">'*'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">   res.header(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"*"</span>);</span><br><span class="line">   res.header(<span class="string">"Access-Control-Allow-Headers"</span>, <span class="string">"X-Requested-With"</span>);</span><br><span class="line">   res.header(<span class="string">"Access-Control-Allow-Methods"</span>,<span class="string">"PUT,POST,GET,DELETE,OPTIONS"</span>);</span><br><span class="line">   res.header(<span class="string">"X-Powered-By"</span>,<span class="string">' 3.2.1'</span>);</span><br><span class="line">   res.header(<span class="string">"Content-Type"</span>, <span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">   next();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>express</tag>
        <tag>node</tag>
        <tag>js</tag>
        <tag>跨域</tag>
      </tags>
  </entry>
  <entry>
    <title>express-generator的使用</title>
    <url>/2020/05/24/express-generator%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>1.全局安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install express-generator -g</span><br></pre></td></tr></table></figure>
<p>2.创建项目</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">express --view&#x3D;ejs 名字</span><br></pre></td></tr></table></figure>
<p>例: express –view=ejs server<br>之后按提示走<br>默认端口3000</p>
<p>3.routes=&gt;index.js里</p>
<p>注意：本地最好不用localhost要用ip<br>查看ip<br>cmd  之后输入  ipconfig</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">router.get(<span class="string">'/api/list'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  res.json(&#123;</span><br><span class="line">    a:<span class="number">1</span>,</span><br><span class="line">    b:<span class="number">2</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>express</tag>
        <tag>node</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>express连接mysql数据库</title>
    <url>/2020/05/24/express%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<p>1.安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install mysql</span><br></pre></td></tr></table></figure>
<p>2.新建db文件夹=&gt;新建sql.js文件<br><a href="https://github.com/mysqljs/mysql" target="_blank" rel="noopener">https://github.com/mysqljs/mysql</a> //给的官方例子</p>
<p>sql.js里</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> mysql      = <span class="built_in">require</span>(<span class="string">'mysql'</span>);</span><br><span class="line"><span class="keyword">var</span> connection = mysql.createConnection(&#123;</span><br><span class="line">  host     : <span class="string">'localhost'</span>,</span><br><span class="line">  user     : <span class="string">'root'</span>,</span><br><span class="line">  password : <span class="string">'root'</span>,</span><br><span class="line">  database : <span class="string">'demo1'</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">module</span>.exports=connection</span><br><span class="line"></span><br><span class="line">server=&gt;<span class="function"><span class="params">router</span>=&gt;</span>index.js</span><br><span class="line"><span class="keyword">var</span> connection = <span class="built_in">require</span>(<span class="string">"../../db/sql.js"</span>)</span><br><span class="line">router.get(<span class="string">'/api/list'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  connection.query(<span class="string">'SELECT * from dome'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">error, results, fields</span>) </span>&#123;</span><br><span class="line">    res.json(results)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>express</tag>
        <tag>node</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>git工作原理</title>
    <url>/2020/05/25/git%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<p><img src="/images/pasted-4.png" alt="upload successful"></p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo常用命令</title>
    <url>/2020/05/31/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p><img src="/images/pasted-10.png" alt="upload successful"></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>animation动画</title>
    <url>/2020/05/24/animation%E5%8A%A8%E7%94%BB/</url>
    <content><![CDATA[<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">background</span>:red;</span><br><span class="line"><span class="attribute">position</span>:relative;</span><br><span class="line"><span class="attribute">animation</span>:mymove <span class="number">5s</span> infinite;</span><br><span class="line"><span class="attribute">-moz-animation</span>:mymove <span class="number">5s</span> infinite; <span class="comment">/* Firefox */</span></span><br><span class="line"><span class="attribute">-webkit-animation</span>:mymove <span class="number">5s</span> infinite; <span class="comment">/* Safari and Chrome */</span></span><br><span class="line"><span class="attribute">-o-animation</span>:mymove <span class="number">5s</span> infinite; <span class="comment">/* Opera */</span></span><br><span class="line">animation-fill-mode:forwards;//动画结束后使用</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> mymove</span><br><span class="line">&#123;</span><br><span class="line">0%   &#123;<span class="attribute">top</span>:<span class="number">0px</span>;&#125;</span><br><span class="line">25%  &#123;<span class="attribute">top</span>:<span class="number">200px</span>;&#125;</span><br><span class="line">75%  &#123;<span class="attribute">top</span>:<span class="number">50px</span>&#125;</span><br><span class="line">100% &#123;<span class="attribute">top</span>:<span class="number">100px</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-moz-keyframes</span> mymove /* Firefox */</span><br><span class="line">&#123;</span><br><span class="line">0%   &#123;<span class="attribute">top</span>:<span class="number">0px</span>;&#125;</span><br><span class="line">25%  &#123;<span class="attribute">top</span>:<span class="number">200px</span>;&#125;</span><br><span class="line">75%  &#123;<span class="attribute">top</span>:<span class="number">50px</span>&#125;</span><br><span class="line">100% &#123;<span class="attribute">top</span>:<span class="number">100px</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> mymove /* Safari <span class="keyword">and</span> Chrome */</span><br><span class="line">&#123;</span><br><span class="line">0%   &#123;<span class="attribute">top</span>:<span class="number">0px</span>;&#125;</span><br><span class="line">25%  &#123;<span class="attribute">top</span>:<span class="number">200px</span>;&#125;</span><br><span class="line">75%  &#123;<span class="attribute">top</span>:<span class="number">50px</span>&#125;</span><br><span class="line">100% &#123;<span class="attribute">top</span>:<span class="number">100px</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@-o-keyframes</span> mymove /* Opera */</span><br><span class="line">&#123;</span><br><span class="line">0%   &#123;<span class="attribute">top</span>:<span class="number">0px</span>;&#125;</span><br><span class="line">25%  &#123;<span class="attribute">top</span>:<span class="number">200px</span>;&#125;</span><br><span class="line">75%  &#123;<span class="attribute">top</span>:<span class="number">50px</span>&#125;</span><br><span class="line">100% &#123;<span class="attribute">top</span>:<span class="number">100px</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>animation-name    规定需要绑定到选择器的 keyframe 名称。。<br>animation-duration    规定完成动画所花费的时间，以秒或毫秒计。</p>
<p>animation-timing-function    规定动画的速度曲线。<br>取值：linear    动画从头到尾的速度是相同的。    测试<br>        ease    默认。动画以低速开始，然后加快，在结束前变慢。    测试<br>        ease-in    动画以低速开始。    测试<br>        ease-out    动画以低速结束。    测试<br>        ease-in-out    动画以低速开始和结束。    测试<br>        cubic-bezier(n,n,n,n)    在 cubic-bezier 函数中自己的值。可能的值是从 0 到 1 的数值。</p>
<p>animation-delay    规定在动画开始之前的延迟。<br>animation-iteration-count    规定动画应该播放的次数。<br>animation-direction    规定是否应该轮流反向播放动画。<br>animation-fill-mode:forwards 动画结束后应用</p>
]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>git查看文件状态</title>
    <url>/2020/05/26/git%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6%E7%8A%B6%E6%80%81/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure>
<p><img src="/images/pasted-2.png" alt="upload successful"><br>红色文件表示文件在工作区，还没到暂存区<br>绿色文件表示文件在暂存区，还没到历史区<br>看不见代表所有修改的信息都提交到历史区</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>jq平滑锚点过渡</title>
    <url>/2020/05/24/jq%E5%B9%B3%E6%BB%91%E9%94%9A%E7%82%B9%E8%BF%87%E6%B8%A1/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'.aaa'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'html, body'</span>).animate(&#123;</span><br><span class="line">        scrollTop: $($.attr(<span class="keyword">this</span>, <span class="string">'href'</span>)).offset().top</span><br><span class="line">    &#125;, <span class="number">800</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>jq</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>jq</tag>
      </tags>
  </entry>
  <entry>
    <title>axios拦截器</title>
    <url>/2020/05/24/axios%E6%8B%A6%E6%88%AA%E5%99%A8/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">"axios"</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"./router"</span></span><br><span class="line"><span class="keyword">const</span> http = axios.create(&#123;</span><br><span class="line">    baseURL: <span class="string">"http://localhost:3000/admin/api"</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>


<p>//加header</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">http.interceptors.request.use(<span class="function"><span class="keyword">function</span> (<span class="params">config</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (localStorage.token) &#123;</span><br><span class="line">        <span class="comment">//加Bearer是因为规范</span></span><br><span class="line">        config.headers.Authorization = <span class="string">"Bearer "</span> + (localStorage.token || <span class="string">''</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>//拦截全部请求错误</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">http.interceptors.response.use(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;, err =&gt; &#123;</span><br><span class="line">   调用了饿了么的message方法</span><br><span class="line">    <span class="keyword">if</span> (err.response.data.message) &#123;</span><br><span class="line">        Vue.prototype.$message(&#123;</span><br><span class="line">            type: <span class="string">"error"</span>,</span><br><span class="line">            message: err.response.data.message</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">if</span>(err.response.status === <span class="number">401</span>)&#123;</span><br><span class="line">            router.push(<span class="string">"/login"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>导出</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> http</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>axios</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>axios</tag>
      </tags>
  </entry>
  <entry>
    <title>keywords</title>
    <url>/2020/05/24/keywords/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;meta name&#x3D;&quot;keywords&quot; content&#x3D;&quot;&quot;&gt;</span><br><span class="line"> &lt;meta name&#x3D;&quot;description&quot; content&#x3D;&quot;&quot;&gt;</span><br><span class="line">     document</span><br><span class="line">       .querySelector(&#39;meta[name&#x3D;&quot;keywords&quot;]&#39;)</span><br><span class="line">       .setAttribute(&quot;content&quot;, &quot;key&quot;);</span><br><span class="line">     document</span><br><span class="line">       .querySelector(&#39;meta[name&#x3D;&quot;description&quot;]&#39;)</span><br><span class="line">       .setAttribute(&quot;content&quot;, &quot;des&quot;);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>mongo刨根问底查法</title>
    <url>/2020/05/24/mongo%E5%88%A8%E6%A0%B9%E9%97%AE%E5%BA%95%E6%9F%A5%E6%B3%95/</url>
    <content><![CDATA[<p>//查找子级<br>见Caregory.js和index.js</p>
<p>见Caregory模型</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">schema.virtual(<span class="string">"children"</span>,&#123;</span><br><span class="line">    localField:<span class="string">"_id"</span>,</span><br><span class="line">    foreignField:<span class="string">"parent"</span>,</span><br><span class="line">    justOne:<span class="literal">false</span>,</span><br><span class="line">    ref:<span class="string">"Category"</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">schema.virtual(<span class="string">"newList"</span>,&#123;</span><br><span class="line">    localField:<span class="string">"_id"</span>,</span><br><span class="line">    foreignField:<span class="string">"categories"</span>,</span><br><span class="line">    justOne:<span class="literal">false</span>,</span><br><span class="line">    ref:<span class="string">"Article"</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>index子路由</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">router.get(<span class="string">"/news/list"</span>,<span class="keyword">async</span> (req,res)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> parent = <span class="keyword">await</span> Category.findOne(&#123;</span><br><span class="line">        name:<span class="string">"新闻分类"</span></span><br><span class="line">    &#125;).populate(&#123;</span><br><span class="line">        path:<span class="string">"children"</span>,</span><br><span class="line">        populate:&#123;</span><br><span class="line">            path:<span class="string">"newList"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).lean()</span><br><span class="line">    res.send(parent)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>mongoDB</category>
      </categories>
      <tags>
        <tag>node</tag>
        <tag>mongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>mongo备份与还原</title>
    <url>/2020/05/24/mongo%E5%A4%87%E4%BB%BD%E4%B8%8E%E8%BF%98%E5%8E%9F/</url>
    <content><![CDATA[<p>备份数据<br>导出数据语法：<code>mongodump -h -prot -u -p -d -o</code><br>-h host 服务器ip地址（一般不写默认本机）<br>-prot   端口（一般不写默认27017）<br>-u user 账号<br>-p pwd  密码<br>-d database 数据库（不写则导出全部）<br>-o open  备份到指定目录下<br>备份全部数据库     要在bin目录下执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mongodump -u admin -p yhq990807 -o G:\mongodb-win32-x86_64\mongodb-win32-x86_64-2012plus-4.2.3\bak</span><br></pre></td></tr></table></figure>
<p>备份指定数据库     要在bin目录下执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mongodump -u admin -p yhq990807 -d admin -o G:\mongodb-win32-x86_64\mongodb-win32-x86_64-2012plus-4.2.3\bak2</span><br></pre></td></tr></table></figure>
<p>user是要备份的数据库的用户</p>
<p>还原/导入数据<br>备份数据目录<code>mongorestore -h -prot -u -p -d --drop</code><br>-d  不写则还原全部数据<br>–drop 先删除数据库再导入，不写则直接覆盖<br>还原全部数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mongorestore -u admin -p yhq990807 --drop G:\mongodb-win32-x86_64\mongodb-win32-x86_64-2012plus-4.2.3\bak</span><br></pre></td></tr></table></figure>
<p>还原指定数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mongorestore -u admin -p yhq990807 -d test4 --drop G:\mongodb-win32-x86_64\mongodb-win32-x86_64-2012plus-4.2.3\bak2\test4</span><br></pre></td></tr></table></figure>
<p>也是要有权限的用户操作</p>
]]></content>
      <categories>
        <category>mongoDB</category>
      </categories>
      <tags>
        <tag>mongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>mongo将所有模型引入插件</title>
    <url>/2020/05/24/mongo%E5%B0%86%E6%89%80%E6%9C%89%E6%A8%A1%E5%9E%8B%E5%BC%95%E5%85%A5%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<p>将所有模型东西引用进来<br><code>npm i require-all</code><br>在db里<br><code>require(&quot;require-all&quot;)(__dirname + &#39;/../models&#39;)</code></p>
]]></content>
      <categories>
        <category>mongoDB</category>
      </categories>
      <tags>
        <tag>node</tag>
        <tag>mongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>git本地仓库提交到远程仓库</title>
    <url>/2020/05/28/git%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E6%8F%90%E4%BA%A4%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><p>1.查看本地仓库与那些仓库链接呢</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure>
<p>2.让本地仓库与远程仓库新建一个链接  //origin是随便起的链接名(可以改，不过一般都用这个)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git remote add origin https:&#x2F;&#x2F;github.com&#x2F;XXXX   &#x2F;&#x2F;github上的远程地址</span><br></pre></td></tr></table></figure>

<p><img src="/images/pasted-6.png" alt="upload successful"></p>
<p>3.取消链接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git remote rm origin</span><br></pre></td></tr></table></figure>

<h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><p>1.提交前最好先拉取  //都是在交互历史区</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git pull origin master  &#x2F;&#x2F;master是分支</span><br></pre></td></tr></table></figure>
<p>2.将本地代码提交到github（需要输入github的用户名和密码）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure>

<p><img src="/images/pasted-7.png" alt="upload successful"></p>
<h2 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git clone github地址 别名&#x2F;&#x2F;可以不设置默认是仓库名</span><br></pre></td></tr></table></figure>

<p><img src="/images/pasted-8.png" alt="upload successful"></p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>mongo的populate</title>
    <url>/2020/05/24/mongo%E7%9A%84populate/</url>
    <content><![CDATA[<p> <code>populate(&quot;parent&quot;)</code>关联集合使用parent关联谁了把谁找出来<br>复用后populate要改成这样</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">const</span> queryOptions = &#123;&#125;</span><br><span class="line">  <span class="keyword">if</span>(req.Model.modelName===<span class="string">"Category"</span>)&#123;</span><br><span class="line">    queryOptions.populate = <span class="string">"parent"</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">const</span> items = <span class="keyword">await</span> req.Model.find().setOptions(queryOptions  ).limit(<span class="number">10</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>mongoDB</category>
      </categories>
      <tags>
        <tag>mongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>node处理上传文件</title>
    <url>/2020/05/24/node%E5%A4%84%E7%90%86%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p> //上传图片<br>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> multer = <span class="built_in">require</span>(<span class="string">"multer"</span>) <span class="comment">//引入</span></span><br><span class="line"><span class="keyword">const</span> upload = multer(&#123;</span><br><span class="line">  dest: __dirname + <span class="string">'/../../upload'</span>  <span class="comment">//要存储的路径地址</span></span><br><span class="line">&#125;)</span><br><span class="line">app.post(<span class="string">'/admin/api/upload'</span>,upload.single(<span class="string">"file"</span>),<span class="keyword">async</span> (req,res)=&gt;&#123;</span><br><span class="line">  <span class="keyword">const</span> file = req.file</span><br><span class="line">  res.send(file)  <span class="comment">//返回结果</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>需要静态文件托管，表示upload下面的文件是静态的<br>  <code>app.use(&#39;/upload&#39;,express.static(__dirname+&#39;/upload&#39;))</code></p>
]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>node用cors跨域</title>
    <url>/2020/05/24/node/</url>
    <content><![CDATA[<p><code>cnpm i express@next mongoose cors</code></p>
<p><code>app.use(require(&quot;cors&quot;)())</code>//使用跨域</p>
]]></content>
  </entry>
  <entry>
    <title>node常用</title>
    <url>/2020/05/24/node%E5%B8%B8%E7%94%A8/</url>
    <content><![CDATA[<p>运行<code>node ----- node index.js</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setImmediate 下一帧</span><br><span class="line">console.log(__filename)&#x2F;&#x2F;当前文件位置</span><br><span class="line">console.log(__dirname)&#x2F;&#x2F;当前文件所在目录</span><br><span class="line">console.log(process)&#x2F;&#x2F;全局变量</span><br><span class="line">console.log(process.argv)&#x2F;&#x2F;能获取执行时后面带的参数 如：node index.js xxxxx</span><br><span class="line">process.stdin.on(&quot;data&quot;,e&#x3D;&gt;&#123; &#x2F;&#x2F;持续运行</span><br><span class="line">    console.log(1)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>npm init 创建npm环境</p>
]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>mongo基本用法</title>
    <url>/2020/05/24/mongo%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<p>数据库(database)  集合(collection)  数据/文档(document)</p>
<p>查看数据库<br>语法：<code>show databases</code></p>
<p>选择数据库<br>语法: <code>use 数据库名</code></p>
<p>删除数据库<br>1.<code>use 数据库名</code>  先选择目标数据库<br>2.<code>db.dropDatabase()</code>  删除数据库</p>
<p>查看集合<br>语法 <code>show collections</code></p>
<p>创建集合<code>db.createCollection(&quot;集合名&quot;)</code></p>
<p>删除集合<code>db.集合名.drop()</code></p>
<p><strong>*****</strong>增<br>语法: db.集合名.insert(JSON数据)<br>如：<code>db.c1.insert({name:&quot;xiaoming&quot;})</code><br>查看集合具体内容<code>db.c1.find()</code></p>
<p>一次插入多条数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">db.c1.insert([</span><br><span class="line">    &#123;</span><br><span class="line">        name:&quot;aaa&quot;,</span><br><span class="line">        age:5</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name:&quot;bbb&quot;,</span><br><span class="line">        age:6</span><br><span class="line">    &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure>
<p>一次插入10条(mongoDB底层是js支持部分js语法)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for(var i &#x3D; 0; i &lt; 10;i++)&#123;</span><br><span class="line">    db.c1.insert(&#123;name:&quot;a&quot;+1,age:i&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p><strong>*****</strong>查<br>语法：<code>db.集合名.find({条件},{查询的列})</code>   []里的内容为可选内容<br>条件 如果不写或者{}代表查询所有数据<br>     查询age=6的   {age:6}  db.c1.find({age:6})<br>查询的列（可选）<br>     不写则查全部字段<br>     {age:1} 只显示age列<br>     {age:0} 除了age列<br>     db.c1.find({age:18},{age:1})  //查询age为18，只显示age的列<br>运算符时<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;&#96;&#96;db.c1.find(&#123;age:&#123;$in:[5,18]&#125;&#125;) &#96;&#96;&#96; 获取年龄为5和18岁的数据</span><br><span class="line"> 运算符有</span><br><span class="line"> $gt  大于</span><br><span class="line"> $gte 大于等于</span><br><span class="line"> $lt  小于</span><br><span class="line"> $lte 小于等于</span><br><span class="line"> $ne  不等于</span><br><span class="line"> $in  in</span><br><span class="line"> $nin not in</span><br><span class="line"> </span><br><span class="line"> &#96;&#96;&#96;db.c1.find(&#123;键:&#123;运算符:值&#125;&#125;).pretty()&#96;&#96;&#96;pretty()格式化数据用的，看着方便</span><br><span class="line"></span><br><span class="line"> *********改</span><br><span class="line"> 语法: db.集合名.update(条件,新数据,是否新增,是否修改多条)</span><br><span class="line"> 是否新增(可选)：指条件匹配不到则插入数据true是插入这条数据，false是不插入  默认是不插入</span><br><span class="line"> 是否修改多条(可选)：将匹配到的数据都修改true是，默认false</span><br><span class="line"> 升级语法</span><br><span class="line"> 修改器  </span><br><span class="line"> $inc    递增</span><br><span class="line"> $rename 重命名列</span><br><span class="line"> $set    修改列值</span><br><span class="line"> $unset  删除列</span><br><span class="line"> db.集合名.update(条件,&#123;修改器:&#123;键:值&#125;&#125;)</span><br><span class="line"> 如 &#96;&#96;&#96;db.c1.update(&#123;name:&quot;bbb&quot;&#125;,&#123;$set:&#123;name:&quot;ddd&quot;&#125;&#125;)</span><br></pre></td></tr></table></figure><br> 加2岁<code>db.c1.update({name:&quot;ddd&quot;},{$inc:{age:2}})</code><br> 减<code>db.c1.update({name:&quot;ddd&quot;},{$inc:{age:-2}})</code><br>综合使用<code>db.c1.update({name:&quot;aaa&quot;},{$set:{name:&quot;abc&quot;},$inc:{age:100},$rename:{who:&quot;sex&quot;},$unset:{other:true}})</code></p>
<p> <strong>*****</strong>删<br> 语法：<code>db.集合名.remove(条件,是否删除一条)</code><br> 是否删除一条true是是，默认false不</p>
<p>排序<br>语法:<code>db.集合名.find().sort(JSON)</code><br>如：<code>db.ci.find().sort({age:-1})</code><br>JSON 键是以这个排列 值是 1升序  -1降序</p>
<p>分页<br>Limit和skip<br>语法<code>：db.集合名.find().sort().skip(数字).limit(数字)</code><br>如：<code>db.ci.find().sort({age:-1}).skip(3).limit(3)</code><br>.count  统计总数量<br>skip 跳过值得数量<br>limit 限制的数量</p>
<p>聚合查询<br>语法：<code>db.集合名.aggregate([
    {管道:{表达式}}
])</code><br>如：<code>db.c2.aggregate([
    {
        $group:{
            _id:&quot;$sex&quot;,//以这个分组，null为不用分组
            rs:{$sum:&quot;$age&quot;} //具体内容
            }
        }
    ])</code></p>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">db.c2.aggregate(</span><br><span class="line">    [</span><br><span class="line">        &#123;</span><br><span class="line">            $group:&#123;</span><br><span class="line">                _id:&quot;$sex&quot;,</span><br><span class="line">                rs:&#123;$sum:&quot;$age&quot;&#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    )</span><br><span class="line">db.c2.aggregate(</span><br><span class="line">    [</span><br><span class="line">        &#123;</span><br><span class="line">            $group:&#123;</span><br><span class="line">                _id:&quot;$sex&quot;,rs:&#123;$sum:1&#125;</span><br><span class="line">                &#125;</span><br><span class="line">           &#125;</span><br><span class="line">            ,</span><br><span class="line">            &#123;</span><br><span class="line">                $sort:&#123;rs:-1&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    )</span><br></pre></td></tr></table></figure></code></pre><p>！！！这里值是表的键名要加$<br>常用管道<br>$group  将集合中的文档分组，用于统计结果<br>$match  过滤数据，只要输出符合条件的文档<br>$sort   聚合数据进一步排序<br>$skip   跳过直到文档数<br>$limit  限制集合数据返回文档数</p>
<p>常用表达式<br>$sum  综合   $sum:1同count表示总数<br>$avg  平均<br>$max  最大值<br>$min  最小值</p>
<p>索引</p>
<p>创建索引语法:<code>db.集合名.createIndex(待创建索引的列,(可选 额外选项))</code><br>如 <code>db.c1.createIndex({name:1})</code><br>待创建索引的列 {键:1,…,键:-1}<br>1代表升序-1代表降序 {age:1}表示创建age索引并按照升序的方式存储<br>额外选项 ：设置索引的名称或者唯一索引等等</p>
<p>删除索引语法：<br>全部删除：<code>db.集合名.dropIndexes()</code><br>如 db.c1.dropIndex(“name_1”)<br>删除指定：<code>db.集合名.dropIndex(索引名)</code></p>
<p>查看索引语法：<code>db.集合名.getIndexes()</code></p>
<p>创建复合/组合索引:<code>db.集合名.creatIndex({键1:方式,键2:方式})</code></p>
<p>创建唯一索引   //就是唯一不重复<br><code>db.集合名.createIndex(待添加的索引列,{unique:列名})</code> 列名可选</p>
<p>分析索引<code>db.集合名.find(条件).explain(&quot;executionStats&quot;)</code><br>explain(“executionStats”)这个是看这次查询是用了什么方式查了多少次的具体信息</p>
<p>如：先创建索引 <code>db.c1.createIndex({age:1})</code><br>   再使用 <code>db.c1.find({age:18}).explain(&quot;executionStats&quot;)</code></p>
]]></content>
      <categories>
        <category>mongoDB</category>
      </categories>
      <tags>
        <tag>mongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>node热重启</title>
    <url>/2020/05/24/node%E7%83%AD%E9%87%8D%E5%90%AF/</url>
    <content><![CDATA[<p><code>npm i -g nodemon</code></p>
<p>之后每次启动语法是 nodemon index.js</p>
]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>node生产token插件</title>
    <url>/2020/05/24/node%E7%94%9F%E4%BA%A7token%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<p>token插件<br><code>npm i jsonwebtoken</code><br>全局index.js里<br>       名        值<br><code>app.set(&quot;secret&quot;,&quot;666666666&quot;)</code></p>
<p>子路由里<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const jwt&#x3D; require(&quot;jsonwebtoken&quot;)</span><br><span class="line">const token &#x3D; jwt.sign(&#123;id:user._id&#125;,app.get(&quot;secret&quot;))</span><br><span class="line">res.send(&#123;token&#125;)</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>node简单抛出异常插件</title>
    <url>/2020/05/24/node%E7%AE%80%E5%8D%95%E6%8A%9B%E5%87%BA%E5%BC%82%E5%B8%B8%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<p><code>npm i http-assert</code>一个简单抛出异常的插件</p>
<p> 使用<br> 引入后<br> <code>assert(user,422,&quot;用户不存在&quot;)</code>不太好用</p>
]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>node转换大小写插件</title>
    <url>/2020/05/24/node%E8%BD%AC%E6%8D%A2%E5%A4%A7%E5%B0%8F%E5%86%99%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<p> <code>cnpm i inflection</code>转换类名的东西比如：大小写，单复数<br><code>const modelName = require(&quot;inflection&quot;).classify(req.params.resource)</code><br><code>const Category = require(`../../models/${modelName}`)</code><br> 这个操作是把小写复数的改成大写单数的</p>
]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>npm常用命令</title>
    <url>/2020/05/31/npm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p><img src="/images/pasted-9.png" alt="upload successful"></p>
]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>node</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>png图片投影</title>
    <url>/2020/05/24/png%E5%9B%BE%E7%89%87%E6%8A%95%E5%BD%B1/</url>
    <content><![CDATA[<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">fliter</span>: <span class="selector-tag">drop-shadow</span>(0 0 5<span class="selector-tag">px</span> <span class="selector-id">#cccccc</span>);</span><br><span class="line"><span class="selector-tag">-webkit-filter</span>: <span class="selector-tag">drop-shadow</span>(0 0 5<span class="selector-tag">px</span> <span class="selector-id">#cccccc</span>);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>scss 样式穿透</title>
    <url>/2020/05/24/scss-%E6%A0%B7%E5%BC%8F%E7%A9%BF%E9%80%8F/</url>
    <content><![CDATA[<p>解决swiper样式修改与scoped冲突的问题</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.case</span> <span class="selector-pseudo">::v-deep</span> <span class="selector-class">.swiper-pagination-bullet</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>scss</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>scss</tag>
      </tags>
  </entry>
  <entry>
    <title>swiper配置</title>
    <url>/2020/05/24/swiper%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">   slidesPerColumnFill : <span class="string">'row'</span> <span class="comment">//表格swiper横着排</span></span><br><span class="line">    centeredSlides: <span class="literal">true</span> <span class="comment">//选中居中</span></span><br><span class="line">    breakpoints: &#123;</span><br><span class="line">      <span class="number">767</span>: &#123;</span><br><span class="line">        slidesPerView: <span class="number">2</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>解决tab bug</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">observer:<span class="literal">true</span>,<span class="comment">//修改swiper自己或子元素时，自动初始化swiper</span></span><br><span class="line"> 	observeParents:<span class="literal">true</span>,</span><br><span class="line"> 	loopFillGroupWithBlank: <span class="literal">true</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>swiper</tag>
      </tags>
  </entry>
  <entry>
    <title>ts基础</title>
    <url>/2020/05/24/ts%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>ts运行环境<br>全局安装 <code>npm install typescript -g</code><br>编译<code>ts tsc 01.ts</code></p>
<p>简化 类似预览ts<br><code>npm install ts-node -g</code><br>之后用 ts-node 01.ts  就可以不编译预览</p>
<p>创建项目<br><code>1.npm init -y //创建package.json</code><br><code>2.tsc --init</code><br><code>3.npm install typescript -D  //当前目录安装ts</code></p>
]]></content>
      <categories>
        <category>ts</category>
      </categories>
      <tags>
        <tag>ts</tag>
      </tags>
  </entry>
  <entry>
    <title>uni app获取dom节点</title>
    <url>/2020/05/24/uni-app%E8%8E%B7%E5%8F%96dom%E8%8A%82%E7%82%B9/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">onReady() &#123;</span><br><span class="line">	<span class="keyword">let</span> view = uni.createSelectorQuery().select(<span class="string">".home_data"</span>);</span><br><span class="line">	view.boundingClientRect(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">		<span class="built_in">console</span>.log(data)</span><br><span class="line">	&#125;).exec();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>uni app</category>
      </categories>
      <tags>
        <tag>uni app</tag>
      </tags>
  </entry>
  <entry>
    <title>uni app rpx转px</title>
    <url>/2020/05/24/uni-app-rpx%E8%BD%ACpx/</url>
    <content><![CDATA[<p>rpx转px算高度<br>    <code>this.swiperHeight=res.windowHeight - uni.upx2px(80)</code></p>
]]></content>
      <categories>
        <category>uni app</category>
      </categories>
      <tags>
        <tag>uni app</tag>
      </tags>
  </entry>
  <entry>
    <title>uni app 获取视口高</title>
    <url>/2020/05/24/uni-app-%E8%8E%B7%E5%8F%96%E8%A7%86%E5%8F%A3%E9%AB%98/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uni.getSystemInfo(&#123;</span><br><span class="line">	success: (res) &#x3D;&gt; &#123;</span><br><span class="line">		this.swiperHeight &#x3D; res.windowHeight - uni.upx2px(80) - this.getSwiperHeight()</span><br><span class="line">	&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>uni app</category>
      </categories>
      <tags>
        <tag>uni app</tag>
      </tags>
  </entry>
  <entry>
    <title>el-table</title>
    <url>/2020/05/24/el-table/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">"items"</span>&gt;</span> //要遍历的数组</span><br><span class="line">  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">"_id"</span> <span class="attr">label</span>=<span class="string">"ID"</span> <span class="attr">width</span>=<span class="string">"230"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span> //prop是值</span><br><span class="line">  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">"title"</span> <span class="attr">label</span>=<span class="string">"标题"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">fixed</span>=<span class="string">"right"</span> <span class="attr">label</span>=<span class="string">"操作"</span> <span class="attr">width</span>=<span class="string">"180"</span>&gt;</span></span><br><span class="line">    //slot-scope="scope" 当前目标的内容存到scope里</span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">"scope"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">size</span>=<span class="string">"small"</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">click</span>=<span class="string">"$router.push(`/articles/edit/$&#123;scope.row._id&#125;`)"</span></span></span><br><span class="line"><span class="tag">      &gt;</span>编辑<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">size</span>=<span class="string">"small"</span> @<span class="attr">click</span>=<span class="string">"remove(scope.row)"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>element</category>
      </categories>
      <tags>
        <tag>element</tag>
      </tags>
  </entry>
  <entry>
    <title>mongo权限</title>
    <url>/2020/05/24/mongo%E6%9D%83%E9%99%90/</url>
    <content><![CDATA[<p><strong><em>!权限机制!</em></strong><br>步骤1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mongo</span><br><span class="line">use admin</span><br></pre></td></tr></table></figure>

<p>创建账号</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">db.createUser(&#123;</span><br><span class="line">    <span class="string">"user"</span>:<span class="string">"账号"</span>,</span><br><span class="line">    <span class="string">"pwd"</span>:<span class="string">"密码"</span>,</span><br><span class="line">    <span class="string">"roles"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            role:<span class="string">"角色"</span>,</span><br><span class="line">            db:<span class="string">"所属数据库"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line">db.createUser(&#123;</span><br><span class="line">    <span class="string">"user"</span>:<span class="string">"admin"</span>,</span><br><span class="line">    <span class="string">"pwd"</span>:<span class="string">"yhq990807"</span>,</span><br><span class="line">    <span class="string">"roles"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            role:<span class="string">"root"</span>,</span><br><span class="line">            db:<span class="string">"admin"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line">db.createUser(&#123;</span><br><span class="line">    <span class="string">"user"</span>:<span class="string">"wz"</span>,</span><br><span class="line">    <span class="string">"pwd"</span>:<span class="string">"yhq990807"</span>,</span><br><span class="line">    <span class="string">"roles"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            role:<span class="string">"readWrite"</span>,</span><br><span class="line">            db:<span class="string">"wz"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>步骤2<br>退出卸载服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mongod --remove  &#x2F;&#x2F;一定要管理员运行</span><br></pre></td></tr></table></figure>

<p>步骤3<br>创建要身份验证的mongoDB服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mongod --install --dbpath G:\mongodb-win32-x86_64\mongodb-win32-x86_64-2012plus-4.2.3\data --logpath G:\mongodb-win32-x86_64\mongodb-win32-x86_64-2012plus-4.2.3\logs\mongodb2.log --auth</span><br></pre></td></tr></table></figure>
<p> –auth表示需要身份验证</p>
<p>步骤4<br>进入服务<br>mongo后不会警报了<br>通过超级管理员身份账号登录<br>方法1：mongo 服务器IP地址:端口/数据库 -u 用户名 -p 密码<br>    如：<code>mongo 127.0.0.1:27017/admin -u admin -p yhq990807</code><br>方法2：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a-先登录  b-选择数据库  c-输入db.auth(用户名,密码)</span><br><span class="line">  mongo     use admin    db.auth(&quot;admin&quot;,&quot;yhq990807&quot;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>mongoDB</category>
      </categories>
      <tags>
        <tag>mongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>vue使用axios</title>
    <url>/2020/05/24/vue%E4%BD%BF%E7%94%A8axios/</url>
    <content><![CDATA[<p>安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save axios</span><br></pre></td></tr></table></figure>
<p>main.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line">Vue.prototype.axios = axios;</span><br></pre></td></tr></table></figure>
<p>//在这个里面反向代理<br>vue.config.js里  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    devServer: &#123;</span><br><span class="line">      proxy: &#123;</span><br><span class="line">        <span class="string">'/api'</span>: &#123;</span><br><span class="line">          target: <span class="string">'http://39.97.33.178'</span>,</span><br><span class="line">          changeOrigin: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>使用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.axios.get(<span class="string">"/api/movieOnInfoList?cityId=10"</span>).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>post</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.axios</span><br><span class="line">  .post(</span><br><span class="line">    <span class="string">"/api/message.php"</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      name:name,</span><br><span class="line">      tel: tel,</span><br><span class="line">      text: text,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"application/json;charset=UTF-8"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">  .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res)</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>axios</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>axios</tag>
      </tags>
  </entry>
  <entry>
    <title>vue中使用百度地图</title>
    <url>/2020/05/24/vue%E4%B8%AD%E4%BD%BF%E7%94%A8%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;api.map.baidu.com&#x2F;api?v&#x3D;2.0&amp;ak&#x3D;nwNW4rgxKCm6cGYkSIPsezRjZ0vOsZyB&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p>!!!可以引完js后在</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">  methods: &#123;</span><br><span class="line">    createMap() &#123;</span><br><span class="line">		<span class="comment">//生成器的代码  </span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    <span class="keyword">this</span>.createMap();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>也要创建vue.config.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    configureWebpack: &#123;</span><br><span class="line">      externals: &#123;</span><br><span class="line">        <span class="string">"BMap"</span>: <span class="string">"BMap"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>  正常方式<br>1.html引入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;api.map.baidu.com&#x2F;api?v&#x3D;2.0&amp;ak&#x3D;nwNW4rgxKCm6cGYkSIPsezRjZ0vOsZyB&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p>2.创建vue.config.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    configureWebpack: &#123;</span><br><span class="line">      externals: &#123;</span><br><span class="line">        <span class="string">"BMap"</span>: <span class="string">"BMap"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>3.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"map"</span> <span class="attr">style</span>=<span class="string">"height:300px"</span> <span class="attr">class</span>=<span class="string">"map"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">  createMap() &#123;</span><br><span class="line">    <span class="comment">/* eslint-disable */</span></span><br><span class="line">    <span class="comment">// 创建Map实例</span></span><br><span class="line">    <span class="keyword">var</span> map = <span class="keyword">new</span> BMap.Map(<span class="string">"map"</span>);</span><br><span class="line">    <span class="keyword">var</span> point = <span class="keyword">new</span> BMap.Point(<span class="number">123.409893</span>,<span class="number">41.802065</span>);</span><br><span class="line">  <span class="comment">//   map.centerAndZoom(point, 15);</span></span><br><span class="line">    <span class="keyword">var</span> marker = <span class="keyword">new</span> BMap.Marker(point); <span class="comment">// 创建标注</span></span><br><span class="line">    map.addOverlay(marker);</span><br><span class="line">    <span class="comment">// 初始化地图,设置中心点坐标和地图级别</span></span><br><span class="line">    map.centerAndZoom(<span class="keyword">new</span> BMap.Point(<span class="number">123.410459</span>, <span class="number">41.802078</span>), <span class="number">18</span>);</span><br><span class="line">    <span class="comment">//添加地图类型控件</span></span><br><span class="line">    map.addControl(</span><br><span class="line">      <span class="keyword">new</span> BMap.MapTypeControl(&#123;</span><br><span class="line">        mapTypes: [BMAP_NORMAL_MAP, BMAP_HYBRID_MAP]</span><br><span class="line">      &#125;)</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 设置地图显示的城市 此项是必须设置的</span></span><br><span class="line">    map.setCurrentCity(<span class="string">"沈阳"</span>);</span><br><span class="line">    <span class="comment">//开启鼠标滚轮缩放</span></span><br><span class="line">    map.enableScrollWheelZoom(<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">/* eslint-enable */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">mounted() &#123;</span><br><span class="line">  <span class="keyword">this</span>.createMap();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue使用swiper</title>
    <url>/2020/05/24/vue%E4%BD%BF%E7%94%A8swiper/</url>
    <content><![CDATA[<p>//安装swiper<br>第一步: 安装  npm i vue-awesome-swiper –save( 这一个是否安装根据实际情况,如果安装上一个你用没效果也要安装这个 =&gt;  npm i swiper )</p>
<p>第二步: 在main.js文件里引入</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> VueAwesomeSwiper <span class="keyword">from</span> <span class="string">'vue-awesome-swiper'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'swiper/css/swiper.css'</span></span><br><span class="line">Vue.use(VueAwesomeSwiper)</span><br></pre></td></tr></table></figure>



<p>第三步;</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">swiper</span> <span class="attr">:options</span>=<span class="string">"swiperOption"</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">swiper-slide</span> <span class="attr">v-for</span>=<span class="string">"items in allData.bannerphoto"</span> <span class="attr">key</span>=<span class="string">"items"</span>&gt;</span></span><br><span class="line">　　　　<span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"items"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;/<span class="name">swiper-slide</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"swiper-pagination"</span> <span class="attr">slot</span>=<span class="string">"pagination"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> (分页器)</span><br><span class="line"><span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>在data里定义轮播图</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">swiperOption: &#123;</span><br><span class="line">　　pagination: <span class="string">'.swiper-pagination'</span>,</span><br><span class="line">　　paginationClickable: <span class="literal">true</span>,</span><br><span class="line">　　autoplay: <span class="number">2500</span>,</span><br><span class="line">　　autoplayDisableOnInteraction: <span class="literal">false</span>,</span><br><span class="line">　　loop: <span class="literal">false</span>,</span><br><span class="line">　　coverflow: &#123;(轮播图切换方式)</span><br><span class="line">　　　　rotate: <span class="number">30</span>,</span><br><span class="line">　　　　stretch: <span class="number">10</span>,</span><br><span class="line">　　　　depth: <span class="number">60</span>,</span><br><span class="line">　　　　modifier: <span class="number">2</span>,</span><br><span class="line">　　　　slideShadows : <span class="literal">true</span></span><br><span class="line">　　&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>swiper</tag>
      </tags>
  </entry>
  <entry>
    <title>vue合并对象</title>
    <url>/2020/05/24/vue%E5%90%88%E5%B9%B6%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<p>  合并对象<br>   <code>this.model = Object.assign({},this.model,res.data);</code><br>   3个值是 要改变的对象  合并对象1   合并对象2</p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>node散列密码</title>
    <url>/2020/05/24/node%E6%95%A3%E5%88%97%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<p><code>npm i bcrypt</code>下载插件</p>
<p>模型里</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const schema &#x3D; new mongoose.Schema(&#123;</span><br><span class="line">    name:&#123;type:String&#125;,</span><br><span class="line">    pwd:&#123;</span><br><span class="line">        type:String,</span><br><span class="line">        select:false,&#x2F;&#x2F;不会被查出来</span><br><span class="line">        &#x2F;&#x2F;怎么保存这个数据</span><br><span class="line">        set(val)&#123;</span><br><span class="line">                       			异步    值   加密程度10-12</span><br><span class="line">            return require(&quot;bcrypt&quot;).hashSync(val,10)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>  <code>const user =await adminUser.findOne({name}).select(&quot;+password&quot;)</code>查询时强制获取password</p>
<p> 校验密码<br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const isValid &#x3D; require(&quot;bcrypt&quot;).compareSync(pwd, user.pwd)</span><br><span class="line">if (!isValid) &#123;</span><br><span class="line">  return res.status(422).send(&#123;</span><br><span class="line">    message: &quot;密码错误&quot;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>mongoDB</category>
      </categories>
      <tags>
        <tag>node</tag>
        <tag>mongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>vue开发环境跨越</title>
    <url>/2020/05/24/vue%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E8%B7%A8%E8%B6%8A/</url>
    <content><![CDATA[<p>新建vue.config.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    devServer: &#123;</span><br><span class="line">      proxy: &#123;</span><br><span class="line">        <span class="string">'/api'</span>: &#123;</span><br><span class="line">          target: <span class="string">'http://localhost:3000'</span>,</span><br><span class="line">          changeOrigin: <span class="literal">true</span>,</span><br><span class="line">          pathRewrite:&#123;</span><br><span class="line">            <span class="string">''</span>:<span class="string">''</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>js</tag>
        <tag>跨域</tag>
      </tags>
  </entry>
  <entry>
    <title>vue媒体查询失败</title>
    <url>/2020/05/24/vue%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2%E5%A4%B1%E8%B4%A5/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"user-scalable=0,width=device-width, initial-scale=1.0"</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue新窗空打卡链接</title>
    <url>/2020/05/24/vue%E6%96%B0%E7%AA%97%E7%A9%BA%E6%89%93%E5%8D%A1%E9%93%BE%E6%8E%A5/</url>
    <content><![CDATA[<p>新窗口打开外链接 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">window.open(url,&#39;_blank&#39;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue安装与创建</title>
    <url>/2020/05/24/vue%E6%8C%89%E7%85%A7%E4%B8%8E%E5%88%9B%E5%BB%BA/</url>
    <content><![CDATA[<p>安装vue cli3</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g @vue&#x2F;cli</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vue create 名字    --创建文件</span><br></pre></td></tr></table></figure>
<p>第二个之后选 1.babel  4.router  5.vuex  6.css<br>      save this 选no</p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue打包后本地查看</title>
    <url>/2020/05/24/vue%E6%89%93%E5%8C%85%E5%90%8E%E6%9C%AC%E5%9C%B0%E6%9F%A5%E7%9C%8B/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install http-server -g</span><br></pre></td></tr></table></figure>
<p>到目录终端http-server -c-1</p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue后台富文本</title>
    <url>/2020/05/24/vue%E5%90%8E%E5%8F%B0%E5%AF%8C%E6%96%87%E6%9C%AC/</url>
    <content><![CDATA[<p><code>npm install --save vue2-editor</code><br>之后引入<br><code>import { VueEditor } from &#39;vue2-editor&#39;</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">components:&#123;</span><br><span class="line">    VueEditor</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>

  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"详情"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">vue-editor</span> <span class="attr">v-model</span>=<span class="string">"model.body"</span>&gt;</span><span class="tag">&lt;/<span class="name">vue-editor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>自己上传图片</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">vue-editor</span> <span class="attr">useCustomImageHandler</span> @<span class="attr">image-added</span>=<span class="string">"handleImageAdded"</span> <span class="attr">v-model</span>=<span class="string">"model.body"</span>&gt;</span><span class="tag">&lt;/<span class="name">vue-editor</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">  <span class="keyword">async</span> handleImageAdded(file, Editor, cursorLocation, resetUploader) &#123;</span><br><span class="line">    <span class="keyword">const</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">    formData.append(<span class="string">"file"</span>, file);</span><br><span class="line">            <span class="comment">//字段名,可以随便改，el好像是file</span></span><br><span class="line">    <span class="keyword">const</span> res =<span class="keyword">await</span> <span class="keyword">this</span>.$http.post(<span class="string">"/upload"</span>,formData)</span><br><span class="line">    Editor.insertEmbed(cursorLocation, <span class="string">"image"</span>, res.data.url);</span><br><span class="line">    resetUploader();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue本地图片路径</title>
    <url>/2020/05/24/vue%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84/</url>
    <content><![CDATA[<p>需要重定向<br>imgsrc2: require(‘../assets/logo4.png’) 图片路径</p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue滚动到某处执行</title>
    <url>/2020/05/24/vue%E6%BB%9A%E5%8A%A8%E5%88%B0%E6%9F%90%E5%A4%84%E6%89%A7%E8%A1%8C/</url>
    <content><![CDATA[<p>获取元素距顶的高</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;&quot; ref&#x3D;&quot;cs&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">this.$refs.cs.getBoundingClientRect().top</span><br></pre></td></tr></table></figure>
<p>例子</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">toscoll() &#123;</span><br><span class="line">    this.gao &#x3D; this.$refs.cs.getBoundingClientRect().top;</span><br><span class="line">    console.log(this.gao);</span><br><span class="line">    if(this.gao&lt;&#x3D;600)&#123;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">mounted() &#123;</span><br><span class="line">  window.addEventListener(&#39;scroll&#39;, this.toscoll)&#x2F;&#x2F;启动</span><br><span class="line">&#125;,</span><br><span class="line">&#x2F;&#x2F;销毁</span><br><span class="line">  destroyed()&#123;</span><br><span class="line">   window.removeEventListener(&quot;scroll&quot;, this.toscroll);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue点击回顶部</title>
    <url>/2020/05/24/vue%E7%82%B9%E5%87%BB%E5%9B%9E%E9%A1%B6%E9%83%A8/</url>
    <content><![CDATA[<p>//同页面点击瞬间回到顶部<br> <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.body.scrollTop = <span class="built_in">document</span>.documentElement.scrollTop = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><br>//点击路由回到顶部(瞬间)<br>main.js里</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">router.afterEach((to,from,next) &#x3D;&gt; &#123;</span><br><span class="line">  window.scrollTo(0,0);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>//回到顶部(有过渡)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">goUp() &#123;</span><br><span class="line">      let nowTop &#x3D;</span><br><span class="line">        document.body.scrollTop || document.documentElement.scrollTop; &#x2F;&#x2F; 获取当前滚动条位置</span><br><span class="line">      if (nowTop &gt; 0) &#123;</span><br><span class="line">        window.requestAnimationFrame(this.goUp);</span><br><span class="line">        window.scrollTo(0, nowTop - nowTop &#x2F; 5);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue格式化日期</title>
    <url>/2020/05/24/vue%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%97%A5%E6%9C%9F/</url>
    <content><![CDATA[<p> <code>npm i dayjs</code></p>
<p>引入 <code>import dayjs from &quot;dayjs&quot;</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;item.createdAt | Data&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">filters:&#123;</span><br><span class="line">    <span class="built_in">Date</span>(val)&#123;</span><br><span class="line">      <span class="comment">//两位数的月份，两位数的日期</span></span><br><span class="line">      <span class="keyword">return</span> dayjs(val).format(<span class="string">'MM/DD'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue父子通信</title>
    <url>/2020/05/24/vue%E7%88%B6%E5%AD%90%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<p>//路由传参 父==&gt;子<br>父</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.$router.push(&#123;</span><br><span class="line">  path: a + <span class="string">"/bookShow/"</span> + bookId,</span><br><span class="line">  query: &#123; <span class="attr">bookId</span>: bookId &#125;</span><br><span class="line">&#125;);</span><br><span class="line">或</span><br><span class="line">在router中</span><br><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'/heros/edit/:id'</span>,</span><br><span class="line">  name: <span class="string">'HeroEdit'</span>,</span><br><span class="line">  component: HeroEdit,</span><br><span class="line">  props:<span class="literal">true</span> <span class="comment">//这句</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>子</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.bookId = <span class="keyword">this</span>.$route.query.bookId;</span><br><span class="line">或</span><br><span class="line">props:[] <span class="comment">//直接能拿到</span></span><br></pre></td></tr></table></figure>

<p> //子 ==》 父传参<br>子</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div @click&#x3D;&quot;active&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">data:activeMenu...</span><br><span class="line"> methods: &#123;</span><br><span class="line">   active() &#123;</span><br><span class="line">     this.activeMenu &#x3D; !this.activeMenu;</span><br><span class="line">     this.$emit(&quot;active&quot;, this.activeMenu);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>父</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Header @active&#x3D;&quot;active&quot; &#x2F;&gt;</span><br><span class="line"> data:activeMenu...</span><br><span class="line">  methods: &#123;</span><br><span class="line">    active(data) &#123;</span><br><span class="line">      this.activeMenu &#x3D; data;</span><br><span class="line">      console.log(this.activeMenu);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue省事模拟数据的方法</title>
    <url>/2020/05/24/vue%E7%9C%81%E4%BA%8B%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<pre><code>newsdata:[
  {
    name:&quot;热门&quot;,
    newsList:new Array(5).fill({}).map(()=&gt;({
        Catname:&quot;公告&quot;,
        title:&quot;未成年人防沉迷新规接入公告&quot;,
        date:&quot;09/21&quot;
    }))
  }
],</code></pre>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue路由懒加载</title>
    <url>/2020/05/24/vue%E8%B7%AF%E7%94%B1%E6%87%92%E5%8A%A0%E8%BD%BD/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// import Home from '../views/Home.vue'</span></span><br><span class="line"><span class="keyword">const</span> Home = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../views/Home.vue'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue详情页不缓存(keep-alive)</title>
    <url>/2020/05/24/vue%E8%AF%A6%E6%83%85%E9%A1%B5%E4%B8%8D%E7%BC%93%E5%AD%98-keep-alive/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">v-if</span>=<span class="string">"$route.meta.keepAlive"</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-view</span> <span class="attr">v-if</span>=<span class="string">"!$route.meta.keepAlive"</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue省略页数</title>
    <url>/2020/05/24/vue%E7%9C%81%E7%95%A5%E9%A1%B5%E6%95%B0/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">v-if&#x3D;&quot;pageActive-2&lt;&#x3D;index&amp;&amp;index&lt;&#x3D;(pageActive+2&lt;5?5:pageActive+2)&quot;</span><br></pre></td></tr></table></figure>
<p>5页例子<br> <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"pageActive&gt;2"</span> <span class="attr">class</span>=<span class="string">"sl"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">click</span>=<span class="string">"toPage(index)"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:class</span>=<span class="string">"&#123;active:index===pageActive&#125;"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-for</span>=<span class="string">"(item,index) in ye"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:key</span>=<span class="string">"index"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-if</span>=<span class="string">"pageActive-2&lt;=index&amp;&amp;index&lt;=(pageActive+2&lt;5?5:pageActive+2)"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"ye"</span></span></span><br><span class="line"><span class="tag">    &gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"pageActive&lt;ye-3"</span> <span class="attr">class</span>=<span class="string">"sl"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue使用wow和animate</title>
    <url>/2020/05/24/vue%E4%BD%BF%E7%94%A8wow%E5%92%8Canimate/</url>
    <content><![CDATA[<p>// wow<br>（1）通过npm安装：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install wowjs --save-dev</span><br></pre></td></tr></table></figure>

<p>animate.css会自动安装。</p>
<p>（2）在main.js中引入animate.css</p>
<p>import ‘animate.css’<br>在组件需要的地方引入wowjs</p>
<p>有两种使用方式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">1.?import &#123;WOW&#125; from &#39;wowjs&#39;? ? mounted() &#123; new WOW().init() &#125;</span><br><span class="line"></span><br><span class="line">2.import WOW from &#39;wowjs&#39;? ? mounted() &#123; new WOW.WOW().init() &#125;</span><br></pre></td></tr></table></figure>

<p>下面给出在实例中的应用：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"caselist"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"clearfix"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"wow slideInUp"</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in cases"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/ecmascript-6"</span>&gt;</span><br><span class="line">  <span class="keyword">import</span> &#123;WOW&#125; <span class="keyword">from</span> <span class="string">'wowjs'</span></span><br><span class="line"> </span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不常用</span></span><br><span class="line">    <span class="comment">//props: ['cases'],</span></span><br><span class="line">    <span class="comment">//watch: &#123;</span></span><br><span class="line">    <span class="comment">//  cases() &#123;</span></span><br><span class="line">    <span class="comment">//    this.$nextTick(() =&gt; &#123; // 在dom渲染完后,再执行动画</span></span><br><span class="line">    <span class="comment">//      var wow = new WOW(&#123;</span></span><br><span class="line">    <span class="comment">//        live: false</span></span><br><span class="line">    <span class="comment">//      &#125;)</span></span><br><span class="line">    <span class="comment">//      wow.init()</span></span><br><span class="line">    <span class="comment">//    &#125;)</span></span><br><span class="line">    <span class="comment">//  &#125;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//常用方法</span></span><br><span class="line">      mounted() &#123;</span><br><span class="line">        <span class="comment">// 在项目加载完成之后初始化wow</span></span><br><span class="line">        <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">let</span> wow = <span class="keyword">new</span> WOW(&#123;</span><br><span class="line">            live: <span class="literal">false</span></span><br><span class="line">          &#125;);</span><br><span class="line">          wow.init();</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue返回上一页</title>
    <url>/2020/05/24/vue%E8%BF%94%E5%9B%9E%E4%B8%8A%E4%B8%80%E9%A1%B5/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.$router.go(<span class="number">-1</span>);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue里props写法</title>
    <url>/2020/05/24/vue%E9%87%8Cprops%E5%86%99%E6%B3%95/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">props:&#123;</span><br><span class="line">	dataList:Array,</span><br><span class="line">	itemWidth:&#123;</span><br><span class="line">		type:String,</span><br><span class="line">		default:&quot;375rpx&quot;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>修改vue路由默认区分方式</title>
    <url>/2020/05/24/%E4%BF%AE%E6%94%B9vue%E8%B7%AF%E7%94%B1%E9%BB%98%E8%AE%A4%E5%8C%BA%E5%88%86%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p>   用路由的地址区分，默认是组件<br>   <code>&lt;router-view :key=&quot;$route.path&quot;&gt;&lt;/router-view&gt;</code></p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>倒计时</title>
    <url>/2020/05/24/%E5%80%92%E8%AE%A1%E6%97%B6/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span>倒计时已结束<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"span_dt_dt"</span> <span class="attr">style</span>=<span class="string">'border:1px solid black;background-color:#FFFFFF'</span> &gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;SCRIPT language=javascript&gt;</span><br><span class="line">&lt;!--</span><br><span class="line"><span class="comment">//document.write("");</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_time</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">window</span>.setTimeout(<span class="string">"show_time()"</span>, <span class="number">1000</span>);</span><br><span class="line">BirthDay=<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"00-00-0000"</span>);<span class="comment">//改成你的计时日期</span></span><br><span class="line">today=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">timeold=(BirthDay.getTime()-today.getTime());</span><br><span class="line">sectimeold=timeold/<span class="number">1000</span></span><br><span class="line">secondsold=<span class="built_in">Math</span>.floor(sectimeold);</span><br><span class="line">msPerDay=<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span></span><br><span class="line">e_daysold=timeold/msPerDay</span><br><span class="line">daysold=<span class="built_in">Math</span>.floor(e_daysold);</span><br><span class="line">e_hrsold=(e_daysold-daysold)*<span class="number">24</span>;</span><br><span class="line">hrsold=<span class="built_in">Math</span>.floor(e_hrsold);</span><br><span class="line">e_minsold=(e_hrsold-hrsold)*<span class="number">60</span>;</span><br><span class="line">minsold=<span class="built_in">Math</span>.floor((e_hrsold-hrsold)*<span class="number">60</span>);</span><br><span class="line">seconds=<span class="built_in">Math</span>.floor((e_minsold-minsold)*<span class="number">60</span>);</span><br><span class="line">span_dt_dt.innerHTML=daysold+<span class="string">"天"</span>+hrsold+<span class="string">"小时"</span>+minsold+<span class="string">"分"</span>+seconds+<span class="string">"秒"</span> ;</span><br><span class="line">&#125;</span><br><span class="line">show_time();</span><br><span class="line"><span class="comment">//--&gt;</span></span><br><span class="line">&lt;<span class="regexp">/SCRIPT&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>兼容前缀</title>
    <url>/2020/05/24/%E5%85%BC%E5%AE%B9%E5%89%8D%E7%BC%80/</url>
    <content><![CDATA[<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">-webkit-</span>     兼容      <span class="selector-tag">Safari</span>  <span class="selector-tag">Chrome</span></span><br><span class="line"><span class="selector-tag">-moz-</span>        兼容       <span class="selector-tag">Firefox</span></span><br><span class="line"><span class="selector-tag">-ms-</span>          兼容       <span class="selector-tag">IE</span></span><br><span class="line"><span class="selector-tag">-0-</span>             兼容       <span class="selector-tag">Opera</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>图片变灰(滤镜)</title>
    <url>/2020/05/24/%E5%9B%BE%E7%89%87%E5%8F%98%E7%81%B0-%E6%BB%A4%E9%95%9C/</url>
    <content><![CDATA[<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">-webkit-filter</span>: <span class="selector-tag">grayscale</span>(100%);    </span><br><span class="line"><span class="selector-tag">-moz-filter</span>: <span class="selector-tag">grayscale</span>(100%);</span><br><span class="line"><span class="selector-tag">-ms-filter</span>: <span class="selector-tag">grayscale</span>(100%);</span><br><span class="line"><span class="selector-tag">-o-filter</span>: <span class="selector-tag">grayscale</span>(100%);</span><br><span class="line"><span class="selector-tag">filter</span>: <span class="selector-tag">grayscale</span>(100%);</span><br><span class="line"><span class="selector-tag">filter</span>: <span class="selector-tag">gray</span>;</span><br><span class="line"><span class="selector-tag">opacity</span><span class="selector-pseudo">:0.7</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>去掉number后面的箭头</title>
    <url>/2020/05/24/%E5%8E%BB%E6%8E%89number%E5%90%8E%E9%9D%A2%E7%9A%84%E7%AE%AD%E5%A4%B4/</url>
    <content><![CDATA[<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-outer-spin-button</span>,</span><br><span class="line">  <span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-inner-spin-button</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-appearance</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">"number"</span>]</span> &#123;</span><br><span class="line">    <span class="attribute">-moz-appearance</span>: textfield;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>创建本地git仓库完成版本控制</title>
    <url>/2020/05/26/%E5%88%9B%E5%BB%BA%E6%9C%AC%E5%9C%B0git%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<p>创建本地git仓库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git init &#x2F;&#x2F;会生成一个隐藏文件夹git</span><br></pre></td></tr></table></figure>
<p>本地编写完代码后，将一些文件提交到暂存区</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git add xxx  &#x2F;&#x2F;将xxx提交到暂存区</span><br><span class="line">$ git add . 或者 -A   &#x2F;&#x2F;将所有最新修改的文件都提交到暂存区</span><br></pre></td></tr></table></figure>
<p>把暂存区内容提交到历史区</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git commit -m&#39;这里写描述信息&#39;</span><br><span class="line">$ git log  &#x2F;&#x2F;查看历史版本信息</span><br><span class="line">$ git reflog &#x2F;&#x2F;查看历史版本信息(包含回滚的信息)</span><br></pre></td></tr></table></figure>
<p>将历史区的文件回滚到本地</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git reset --hard xxxxxxxxxxxxxxxx   &#x2F;&#x2F;xxx是要回退的版本号</span><br></pre></td></tr></table></figure>


<p>当我们需要删除暂存区或分支上的文件, 同时工作区也不需要这个文件了, 可以使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git rm 文件名</span><br><span class="line">git commit -m &#39;delete somefile&#39;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>
<p>当我们需要删除暂存区或分支上的文件, 但本地又需要使用, 只是不希望这个文件被版本控制, 可以使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git rm --cached 文件名</span><br><span class="line">git commit -m &#39;delete remote somefile&#39;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序全局样式</title>
    <url>/2020/05/31/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A8%E5%B1%80%E6%A0%B7%E5%BC%8F/</url>
    <content><![CDATA[<p>app.wxss里定义全局颜色</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">page</span>&#123;</span><br><span class="line">  <span class="attribute">--themeColor</span>:<span class="number">#eb4450</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>index.wxss里使用颜色</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">view</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--themeColor);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>vue打包前改路径</title>
    <url>/2020/05/24/vue%E6%89%93%E5%8C%85%E5%89%8D%E6%94%B9%E8%B7%AF%E5%BE%84/</url>
    <content><![CDATA[<p>打包前<br>开发环境变量</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">const</span> http = axios.create(&#123;</span><br><span class="line">    <span class="comment">// baseURL: "http://localhost:3000/admin/api"</span></span><br><span class="line">    baseURL: process.env.VUE_APP_API_URL || <span class="string">"/admin/api"</span></span><br><span class="line">    <span class="comment">//      process.env.VUE_APP是固定的</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>建个.env.development文件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">VUE_APP_API_URL = http:<span class="comment">//localhost:3000/admin/api</span></span><br></pre></td></tr></table></figure>


<p>vue.config.js里</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    outputDir : __dirname +<span class="string">"/../server/admin"</span>,<span class="comment">//编译到的目录</span></span><br><span class="line">    <span class="comment">//判断是否是生产环境是的话加/admin前缀</span></span><br><span class="line">    publicPath:process.env.NODE_ENV === <span class="string">"production"</span></span><br><span class="line">    ? <span class="string">"/admin/"</span></span><br><span class="line">    : <span class="string">'/'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>axios</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序动画</title>
    <url>/2020/05/24/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8A%A8%E7%94%BB/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"usermotto"</span> <span class="attr">animation</span>=<span class="string">"&#123;&#123;an&#125;&#125;"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>  <span class="attr">class</span>=<span class="string">"user-motto &#123;&#123;gaoliang?'active':''&#125;&#125;"</span>&gt;</span>&#123;&#123;motto&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">data-name</span>=<span class="string">"5"</span> <span class="attr">bindtap</span>=<span class="string">"al"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>


<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">al(el)&#123;</span><br><span class="line">  <span class="keyword">var</span> animation = wx.createAnimation(&#123;</span><br><span class="line">    duration: <span class="number">4000</span>,</span><br><span class="line">    timingFunction: <span class="string">'ease'</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  animation.opacity(<span class="number">0.2</span>).translate(<span class="number">100</span>, <span class="number">-100</span>).step()</span><br><span class="line">  <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">    name: el.currentTarget.dataset.name,</span><br><span class="line">    gaoliang:<span class="literal">true</span>,</span><br><span class="line">    an: animation.export()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序添加高亮</title>
    <url>/2020/05/24/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B7%BB%E5%8A%A0%E9%AB%98%E4%BA%AE/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">bindtap</span>=<span class="string">"al"</span> <span class="attr">class</span>=<span class="string">"user-motto &#123;&#123;gaoliang?'active':''&#125;&#125;"</span>&gt;</span>&#123;&#123;motto&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">al()&#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      gaoliang:<span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序点击事件</title>
    <url>/2020/05/24/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6/</url>
    <content><![CDATA[ <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;text data-name&#x3D;&quot;5&quot; bindtap&#x3D;&quot;al&quot; class&#x3D;&quot;user-motto&quot;&gt;&#123;&#123;motto&#125;&#125;&lt;&#x2F;text&gt;</span><br><span class="line">&lt;text&gt;&#123;&#123;name&#125;&#125;&lt;&#x2F;text&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  al(el)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(el.currentTarget.dataset.name)</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">    name: el.currentTarget.dataset.name</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序自定义循环名</title>
    <url>/2020/05/31/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BE%AA%E7%8E%AF%E5%90%8D/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;view class&#x3D;&quot;floor-group&quot; wx:for&#x3D;&quot;&#123;&#123;floorList&#125;&#125;&quot; wx:key&#x3D;&quot;index1&quot; wx:for-item&#x3D;&quot;item1&quot; wx:for-index&#x3D;&quot;index1&quot;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序组件使用</title>
    <url>/2020/05/31/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BB%84%E4%BB%B6%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>1.先右键创建个组件<br><img src="/images/pasted-11.png" alt="upload successful"></p>
<p>2.在要使用的页面index.json中引入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;usingComponents&quot;: &#123;</span><br><span class="line">    &quot;SearchInput&quot;:&quot;..&#x2F;..&#x2F;components&#x2F;searchInput&#x2F;searchInput&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;navigationBarTitleText&quot;: &quot;首页&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/images/pasted-12.png" alt="upload successful"><br>3.在index.wxml中使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;SearchInput &#x2F;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>引入字体</title>
    <url>/2020/05/23/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'pingfang'</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(../font/PINGFANG.TTF);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">"pingfang"</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>css</category>
      </categories>
  </entry>
  <entry>
    <title>手机rem</title>
    <url>/2020/05/24/%E6%89%8B%E6%9C%BArem/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span>  e=n.document,</span><br><span class="line">         t=e.documentElement,</span><br><span class="line">         i=<span class="number">720</span>,</span><br><span class="line">         d=i/<span class="number">100</span>,</span><br><span class="line">         o=<span class="string">"orientationchange"</span><span class="keyword">in</span> n?<span class="string">"orientationchange"</span>:<span class="string">"resize"</span>,</span><br><span class="line">         a=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="keyword">var</span> n=t.clientWidth||<span class="number">320</span>;n&gt;<span class="number">720</span>&amp;&amp;(n=<span class="number">720</span>);</span><br><span class="line">             t.style.fontSize=n/d+<span class="string">"px"</span></span><br><span class="line">         &#125;;</span><br><span class="line">         e.addEventListener&amp;&amp;(n.addEventListener(o,a,!<span class="number">1</span>),e.addEventListener(<span class="string">"DOMContentLoaded"</span>,a,!<span class="number">1</span>))</span><br><span class="line">&#125;(<span class="built_in">window</span>);</span><br></pre></td></tr></table></figure>

<p>华盖rem</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params">d,c</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e=d.documentElement,</span><br><span class="line">        b=<span class="string">"resize"</span>,</span><br><span class="line">        a=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> f = <span class="built_in">window</span>.innerWidth;</span><br><span class="line">            <span class="keyword">if</span>(!f)&#123;<span class="keyword">return</span>&#125;</span><br><span class="line">            e.style.fontSize= (f/<span class="number">1440</span>*<span class="number">100</span>).toFixed(<span class="number">0</span>)+<span class="string">"px"</span></span><br><span class="line">            e.style.overflowX=<span class="string">"hidden"</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span>(!d.addEventListener)&#123;<span class="keyword">return</span>&#125;</span><br><span class="line">        c.addEventListener(b,a,<span class="literal">false</span>);</span><br><span class="line">        d.addEventListener(<span class="string">"DOMContentLoaded"</span>,a,<span class="literal">false</span>);</span><br><span class="line">        a()</span><br><span class="line">    &#125;)(<span class="built_in">document</span>,<span class="built_in">window</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>手机视频不全屏</title>
    <url>/2020/05/24/%E6%89%8B%E6%9C%BA%E8%A7%86%E9%A2%91%E4%B8%8D%E5%85%A8%E5%B1%8F/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">poster</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">controls</span> <span class="attr">playsinline</span>=<span class="string">"true"</span> <span class="attr">webkit-playsinline</span>=<span class="string">"true"</span>  <span class="attr">x5-playsinline</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>手机禁止放大</title>
    <url>/2020/05/24/%E6%89%8B%E6%9C%BA%E7%A6%81%E6%AD%A2%E6%94%BE%E5%A4%A7/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,height=device-height,inital-scale=1.0,maximum-scale=1.0,user-scalable=no;"</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>手机视频播放</title>
    <url>/2020/05/24/%E6%89%8B%E6%9C%BA%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">loop</span>=<span class="string">"loop"</span> <span class="attr">autoplay</span>=<span class="string">"autoplay"</span> <span class="attr">muted</span> <span class="attr">x5-playsinline</span>=<span class="string">""</span> <span class="attr">playsinline</span>=<span class="string">""</span> <span class="attr">x-webkit-airplay</span>=<span class="string">"allow"</span> <span class="attr">style</span>=<span class="string">"object-fit:fill"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>改input样式</title>
    <url>/2020/05/24/%E6%94%B9input%E6%A0%B7%E5%BC%8F/</url>
    <content><![CDATA[<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">"radio"</span>]</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">clip</span>: <span class="built_in">rect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">"radio"</span>]</span> + <span class="selector-tag">label</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">" "</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">vertical-align</span>: bottom;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: .<span class="number">4em</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../images/<span class="number">5</span>.png) no-repeat;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">"radio"</span>]</span><span class="selector-pseudo">:checked</span> + <span class="selector-tag">label</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">        <span class="attribute">content</span>: <span class="string">" "</span>;</span><br><span class="line">        <span class="attribute">display</span>: inline-block;</span><br><span class="line">        <span class="attribute">vertical-align</span>: bottom;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">18px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">18px</span>;</span><br><span class="line">        <span class="attribute">margin-right</span>: .<span class="number">4em</span>;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">        <span class="attribute">background</span>: <span class="built_in">url</span>(../images/<span class="number">4</span>.png) no-repeat;</span><br><span class="line">        <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>点击视频播放</title>
    <url>/2020/05/24/%E7%82%B9%E5%87%BB%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> video1=<span class="built_in">document</span>.getElementById(<span class="string">"cideoPlay1"</span>);</span><br><span class="line"></span><br><span class="line">video1.οnclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(video1.paused)&#123;</span><br><span class="line">        video1.play();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        video1.pause();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>滚动时导航改变</title>
    <url>/2020/05/24/%E6%BB%9A%E5%8A%A8%E6%97%B6%E5%AF%BC%E8%88%AA%E6%94%B9%E5%8F%98/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> scrollTop =$(<span class="keyword">this</span>).scrollTop();<span class="comment">//滚动高度</span></span><br><span class="line">        <span class="keyword">if</span>(scrollTop &gt; <span class="number">10</span>)&#123;</span><br><span class="line">            $(<span class="string">"#top1"</span>).addClass(<span class="string">"dh2"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(scrollTop &lt; <span class="number">10</span>)&#123;</span><br><span class="line">            $(<span class="string">"#top1"</span>).removeClass(<span class="string">"dh2"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>jq</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>jq</tag>
      </tags>
  </entry>
  <entry>
    <title>文字双齐</title>
    <url>/2020/05/24/%E6%96%87%E5%AD%97%E5%8F%8C%E9%BD%90/</url>
    <content><![CDATA[<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">text-align</span>: <span class="selector-tag">justify</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>用js引入css</title>
    <url>/2020/05/24/%E7%94%A8js%E5%BC%95%E5%85%A5css/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;link rel='stylesheet' href='css/style.css'&gt;"</span>);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>监听路由改变</title>
    <url>/2020/05/24/%E7%9B%91%E5%90%AC%E8%B7%AF%E7%94%B1%E6%94%B9%E5%8F%98/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">watch: &#123;</span><br><span class="line">    <span class="comment">// 如果路由有变化，会再次执行该方法</span></span><br><span class="line">    <span class="string">'$route'</span>: <span class="string">'fetchData'</span>,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>百度地图秘钥</title>
    <url>/2020/05/24/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E7%A7%98%E9%92%A5/</url>
    <content><![CDATA[<p>nwNW4rgxKCm6cGYkSIPsezRjZ0vOsZyB</p>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
  </entry>
  <entry>
    <title>背景图片视差滚动</title>
    <url>/2020/05/24/%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87%E8%A7%86%E5%B7%AE%E6%BB%9A%E5%8A%A8/</url>
    <content><![CDATA[<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.youshi_img</span>&#123;</span><br><span class="line">	<span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>给vue动态赋值</title>
    <url>/2020/05/24/%E7%BB%99vue%E5%8A%A8%E6%80%81%E8%B5%8B%E5%80%BC/</url>
    <content><![CDATA[<p>告诉vue动态赋值了 要给那个对象赋值<br>  <code>this.$set(this.model,&#39;icon&#39;,res.url)</code><br>    3个参数是   要赋值的对象  key  value</p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue具名插槽</title>
    <url>/2020/05/24/vue%E5%85%B7%E5%90%8D%E6%8F%92%E6%A7%BD/</url>
    <content><![CDATA[<p>父</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">CardList</span> <span class="attr">title</span>=<span class="string">"新闻资讯"</span> <span class="attr">:categorise</span>=<span class="string">"newsdata"</span>&gt;</span>//传入的数据</span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> #<span class="attr">items</span>=<span class="string">"&#123;categorise&#125;"</span>&gt;</span>//从子组件获取到的处理过数据</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"flex mt-3 font-md color-333"</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in categorise.newsList"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>[&#123;&#123;item.Catname&#125;&#125;]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>丨<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"flex-1"</span>&gt;</span>&#123;&#123;item.title&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;item.date&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">CardList</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>子</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">swiper</span> <span class="attr">class</span>=<span class="string">"mt-2"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">swiper-slide</span> <span class="attr">v-for</span>=<span class="string">"(v,i) in categorise"</span> <span class="attr">:key</span>=<span class="string">"i"</span>&gt;</span></span><br><span class="line">  //具名插槽 name是要跟外面#items对应的</span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"items"</span> <span class="attr">:categorise</span>=<span class="string">"v"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">swiper-slide</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>让div可以自由编辑</title>
    <url>/2020/05/24/%E8%AE%A9div%E5%8F%AF%E4%BB%A5%E8%87%AA%E7%94%B1%E7%BC%96%E8%BE%91/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">contenteditable</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>让整体网站配色变成黑白</title>
    <url>/2020/05/24/%E8%AE%A9%E6%95%B4%E4%BD%93%E7%BD%91%E7%AB%99%E9%85%8D%E8%89%B2%E5%8F%98%E6%88%90%E9%BB%91%E7%99%BD/</url>
    <content><![CDATA[<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: gray;</span><br><span class="line">  <span class="attribute">-webkit-filter</span>: <span class="built_in">grayscale</span>(<span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>限制文字显示几行</title>
    <url>/2020/05/24/%E9%99%90%E5%88%B6%E6%96%87%E5%AD%97%E6%98%BE%E7%A4%BA%E5%87%A0%E8%A1%8C/</url>
    <content><![CDATA[<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">-webkit-box</span>;</span><br><span class="line"><span class="selector-tag">-webkit-line-clamp</span>: 2;</span><br><span class="line"><span class="selector-tag">-webkit-box-orient</span>: <span class="selector-tag">vertical</span>;</span><br><span class="line"><span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>雪碧图定位工具网站</title>
    <url>/2020/05/24/%E9%9B%AA%E7%A2%A7%E5%9B%BE%E5%AE%9A%E4%BD%8D%E5%B7%A5%E5%85%B7%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<p><a href="http://www.spritecow.com" target="_blank" rel="noopener">www.spritecow.com</a></p>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
      <tags>
        <tag>方便的网址</tag>
      </tags>
  </entry>
  <entry>
    <title>默认以开发者模式打开谷歌</title>
    <url>/2020/05/24/%E9%BB%98%E8%AE%A4%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E6%89%93%E5%BC%80%E8%B0%B7%E6%AD%8C/</url>
    <content><![CDATA[<p>右键谷歌浏览器，属性里填上<br>-incognito</p>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
      <tags>
        <tag>小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>vue阻止默认表单提交与简单正则</title>
    <url>/2020/05/24/vue%E9%98%BB%E6%AD%A2%E9%BB%98%E8%AE%A4%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4%E4%B8%8E%E7%AE%80%E5%8D%95%E6%AD%A3%E5%B8%B8/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;form v-on:submit.prevent&#x3D;&quot;tj&quot;&gt; 阻止提交页面刷新 并执行 tj()方法 form里写</span><br></pre></td></tr></table></figure>
<p> @submit.native.prevent=”save”<br> 提交    原生    阻止<br>//获取dom元素</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">"您的电话"</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span> <span class="attr">id</span> <span class="attr">ref</span>=<span class="string">"tel"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"tj"</span> <span class="attr">value</span>=<span class="string">"提交留言"</span> <span class="attr">type</span>=<span class="string">"submit"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">tj() &#123;</span><br><span class="line">  <span class="keyword">var</span> tel = <span class="keyword">this</span>.$refs.tel.value;</span><br><span class="line">  <span class="keyword">var</span> name = <span class="keyword">this</span>.$refs.name.value;</span><br><span class="line">  <span class="keyword">var</span> text = <span class="keyword">this</span>.$refs.text.value;</span><br><span class="line">  <span class="keyword">if</span> (name == <span class="string">""</span>) &#123;</span><br><span class="line">    alert(<span class="string">"姓名不能为空"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (tel == <span class="string">""</span>) &#123;</span><br><span class="line">    alert(<span class="string">"手机号不能为空"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (text == <span class="string">""</span>) &#123;</span><br><span class="line">    alert(<span class="string">"留言内容不能为空"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="regexp">/^1[3456789]\d&#123;9&#125;$/</span>.test(tel)) &#123;</span><br><span class="line">    alert(<span class="string">"手机号格式不正确"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(name,tel,text);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序封装接口</title>
    <url>/2020/05/31/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%B0%81%E8%A3%85%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<p>新建个js文件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> request = <span class="function">(<span class="params">params</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">        wx.request(&#123;</span><br><span class="line">            ...params,</span><br><span class="line">            success:<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">                resolve(res)</span><br><span class="line">            &#125;,</span><br><span class="line">            fail:<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line">                reject(err)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在要用到的页面的js上面</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  request</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">"../../request/index.js"</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/pasted-13.png" alt="upload successful"></p>
<p>使用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">getFloorList() &#123;</span><br><span class="line">  request(&#123;</span><br><span class="line">    url: <span class="string">'xxxxxxxxxxx'</span></span><br><span class="line">  &#125;).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      floorList: res.data.message</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生命周期函数--监听页面加载</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">onLoad: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.getFloorList()</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>object-fit改变元素内容怎么缩放</title>
    <url>/2020/05/24/%E8%AE%A9%E7%BD%91%E7%AB%99%E6%95%B4%E4%BD%93%E5%8F%98%E6%88%90%E9%BB%91%E7%99%BD/</url>
    <content><![CDATA[<p>object-fit</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.fill</span> &#123; <span class="attribute">object-fit</span>: fill; &#125;</span><br><span class="line"><span class="selector-class">.contain</span> &#123; <span class="attribute">object-fit</span>: contain; &#125;</span><br><span class="line"><span class="selector-class">.cover</span> &#123; <span class="attribute">object-fit</span>: cover; &#125;</span><br><span class="line"><span class="selector-class">.none</span> &#123; <span class="attribute">object-fit</span>: none; &#125;</span><br><span class="line"><span class="selector-class">.scale-down</span> &#123; <span class="attribute">object-fit</span>: scale-down; &#125;</span><br></pre></td></tr></table></figure>
<p>每个属性值的具体含义如下：<br>fill: 中文释义“填充”。默认值。替换内容拉伸填满整个content box, 不保证保持原有的比例。<br>contain: 中文释义“包含”。保持原有尺寸比例。保证替换内容尺寸一定可以在容器里面放得下。因此，此参数可能会在容器内留下空白。<br>cover: 中文释义“覆盖”。保持原有尺寸比例。保证替换内容尺寸一定大于容器尺寸，宽度和高度至少有一个和容器一致。因此，此参数可能会让替换内容（如图片）部分区域不可见。<br>none: 中文释义“无”。保持原有尺寸比例。同时保持替换内容原始尺寸大小。<br>scale-down: 中文释义“降低”。就好像依次设置了none或contain, 最终呈现的是尺寸比较小的那个。</p>
]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
</search>
